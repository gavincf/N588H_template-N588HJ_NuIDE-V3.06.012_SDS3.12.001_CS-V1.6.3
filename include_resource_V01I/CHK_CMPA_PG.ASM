

.IF(C_CMPA_EN .EQ. 1)

BK0_CMPA_ON:
	
	LDA	#00000001B; 关闭CMP_A
	STA	CMP_C

	RTS

BK0_CMPAB_OFF:
	LDA	#00000000B; 关闭CMP_A
	STA	CMP_C
	RTS

.ENDIF

.IF(C_CMPA_EN .EQ. 1)
FRESH_STS0:
;设置反向状态
	LDA	#B_CHK_STS0
	BIT	SR_CHK_STS0
	BNE	FRESH_STS0_S10
	LDA	#B_CHK_STS0_ST
	TSB	<R_CHK_STS0_ST
	RTS
FRESH_STS0_S10:
	LDA	#B_CHK_STS0_ST
	TRB	<R_CHK_STS0_ST
	RTS
.ENDIF

.IF(C_CMPA_EN .EQ. 1)
STORE_STS0:
;设置反向状态
	LDA	#B_CHK_STS0
	BIT	SR_CHK_STS0
	BNE	STORE_STS0_S10
	LDA	#B_CHK_STS0_ST
	TRB	<R_CHK_STS0_ST
	RTS
STORE_STS0_S10:
	LDA	#B_CHK_STS0_ST
	TSB	<R_CHK_STS0_ST
	RTS
.ENDIF


CHECK_STS:

.IF(C_CMPA_EN .EQ. 1)
	
CHK_STS0:
	MR_DET_CHK_CMPA
	BEQ	CHK_STS0_F_RET
	
	LDA	#B_CHK_STS0
	BIT	SR_CHK_STS0
	BNE	CHK_STS0_HIGH
;LOW
	LDA	#B_CHK_STS0_ST
	BIT	<R_CHK_STS0_ST
	BEQ	CHK_STS0_QUIT
	LDA	<R_CHK_STS0_DEBOUNCE
	BEQ	CHK_STS0_LOW_S10
	INC	<R_CHK_STS0_DEBOUNCE
	BNE	CHK_STS0_QUIT
;GET KEY
	LDA	#B_CHK_STS0_ST
	TRB	<R_CHK_STS0_ST
	
	JMP	CHK_STS0_F
CHK_STS0_F_RET:
	BRA	CHK_STS0_QUIT

CHK_STS0_LOW_S10:
	LDA	#C_CHK_STS0_DEBOUNCE ; -DEBOUNCE * 5.33MS
	STA	<R_CHK_STS0_DEBOUNCE
	BRA	CHK_STS0_QUIT
CHK_STS0_HIGH:
	LDA	#B_CHK_STS0_ST
	BIT	<R_CHK_STS0_ST
	BNE	CHK_STS0_QUIT
	TSB	<R_CHK_STS0_ST
	
	JMP	CHK_STS0_R
CHK_STS0_R_RET:
	
CHK_STS0_QUIT:
.ENDIF
	RTS