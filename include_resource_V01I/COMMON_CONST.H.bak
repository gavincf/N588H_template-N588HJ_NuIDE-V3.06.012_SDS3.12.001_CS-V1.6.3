;----------------------
; CONST
;-----------------------------
C_TRUE	EQU	1
C_FALSE	EQU	0


C_GAPTIME	EQU	5
;	according to Fosc
;5: 5.33MS
;8: 8MS
;81: 8.192MS
C_W567BS	EQU	0
C_W588AS	EQU	1
C_W588CD	EQU	2
C_N567GHK	EQU	3
C_W567CJ	EQU	4
C_N588H		EQU	5
C_N588L		EQU	6

C_CHIP	EQU	C_N588H

;=====================================
;=====================================
;
; Function configure
;
;=====================================
;=======================================


C_TMG0_EN EQU	0




;----------------------------------------------
;	PROJECT_CONST.H
;----------------------------------------------
C_DLYCNT0_ENABLE	EQU	1
C_DLYCNT1_ENABLE	EQU	0
C_DLYCNT2_ENABLE	EQU	0
C_DLYCNT3_ENABLE	EQU	0
C_DLYCNT4_ENABLE	EQU	0
C_DLYCNT5_ENABLE	EQU	0

C_TEMPO_ENABLE	EQU 0
	


;==========================================
;KEY2LED_RAM.H
;===========================================

;===========================================

CONST_10US_NOP	EQU	30

C_KEYCH_MAX		EQU	2

C_BUZZER_ENABLE EQU	0



;========================
;	WAITKEY_RAM.H
;========================

C_CMPA_EN	EQU	0
C_CHK_LVR_EN	EQU 0

;========================
;========================

;----------------------------------
;	check key
;----------------------------------


;========================
;	CHKMKEY_RAM.H
;========================
C_SCANKEY_4CH_LP EQU	0
C_SCANKEY_4CH_LN	EQU	0


C_MKEYCH_MAX	EQU	0; MAX = 4;if GND as output: should be '1'

C_MKEYCH_MAX_REV EQU 0

C_CHKMKEY_GND_AS_OP EQU 0

C_LED_MATRIX_EN		EQU		0
C_LED_MATRIX_CONFIG		EQU		0
C_CHK_KEY_SHARE_LED_EN EQU	0



C_WLED_EXIT	EQU	0


;===============================
; special function
;================================
;==============================
;MOTOR PWM
;==============================
C_M1_EN			EQU	0
C_M1_PWM_EN	EQU	0


;=============================
;	LED_FSH_CTRL_RAM.H
;==============================
C_LIGHT_FSH_ENABLE EQU	0
C_DRUMLED_ENABLE	EQU	0;按鼓对应的LED亮，按时间控制亮灭
;==============================
;WIPER
;==============================
C_WIPER_EN	EQU	0
C_CHKPOS_EN 	EQU	0

;==========================
;	CHK_MODE.ASM
;==========================
C_CHKMODE_EN	EQU	0


;==============================================

C_PWON_SLEEP_EN EQU	0

;=========================
;	WAITKEY_RAM.H
;=========================
C_EVP_DLY_EN	EQU	0

C_CH_INS_CHANGE_EN EQU	0


C_TPO_ADJ_EN	EQU	0


;--------------------- min 1 port EN,最少有一个允许。
C_BP0_STATUS_EN	EQU	1; 
C_BP1_STATUS_EN	EQU	1;
C_BP2_STATUS_EN	EQU	0;
;------------------------------------------

C_R_BP0_USED EQU 1
C_R_BP1_USED EQU 1
C_R_BP2_USED EQU 0





;=========================
;LED7SEG_RAM.H
;=========================
C_LED7SEG_EN	EQU 0

C_AMP_EN	EQU	0

C_SOLO_EN	EQU	0

C_RHY_EN	EQU	0

;========================
;	RANDOM_RAM.H
;========================
C_RANDOM0_EN EQU	0
C_RANDOM1_EN EQU	0

RANDOM0_0_BK_EN EQU	0
RANDOM0_1_BK_EN EQU	0
RANDOM0_2_BK_EN EQU	0
RANDOM0_3_BK_EN	EQU	0



;========================
;	EQU_RAM.H
;========================
C_EQU_EN	EQU	0
C_EQU_PWOFF_EN	EQU	0

C_GROUP_EN	EQU	0

;========================
;	TouchKeys_N588H.asm
;========================
;C_TOUCH_EN EQU	0



;========================
;	AUTOSLEEP_RAM.H
;========================
C_AUTOSLEEP_WAITKEY_EN EQU	0


C_LEDS_FLOW_USE_CNT0 EQU	0




;========================
;	PLAY_LIST.H
;========================
C_PLAY_LIST_EN EQU 1


C_BMA223_EN EQU	0


C_IRTX2_EN	EQU	1
C_IRRX_EN	EQU	1


C_PWMLED_EN 	EQU 1

C_SCORE_2_3DIGIT_EN	EQU	0
C_SCORE_2_4DIGIT_EN	EQU	0


;----------------------
; CONST
;-----------------------------
C_NOP				EQU	0FFH
XXH				EQU	0FEH ; 按键位置空


;=============================================

C_BIT0			EQU	01H
C_BIT1			EQU	02H
C_BIT2			EQU	04H
C_BIT3			EQU	08H
C_BIT4			EQU	10H
C_BIT5			EQU	20H
C_BIT6			EQU	40H
C_BIT7			EQU	80H

C_BIT0V			EQU	11111110B
C_BIT1V			EQU	11111101B
C_BIT2V			EQU	11111011B
C_BIT3V			EQU	11110111B
C_BIT4V			EQU	11101111B
C_BIT5V			EQU	11011111B
C_BIT6V			EQU	10111111B
C_BIT7V			EQU	01111111B

.IF(C_GAPTIME .EQ. 81)
;*8.192
CNT_STOP		EQU	0000000h

T005000MS		EQU	0FFFD8Fh
T000256MS		EQU	0FFFFE0h

T060000MS		EQU	0FFE364h
T030000MS		EQU	0FFF1B2H

T010000MS		EQU	0FFFB3CH
T180000MS		EQU	0FFAA2Ch


;
.ENDIF

.IF(C_GAPTIME .EQ. 8)
;*8
CNT_STOP		EQU	0000000h
;
T000032MS		EQU	0FFFFFCh
T000040MS		EQU	0FFFFFBh
T000056MS		EQU	0FFFFF9h
T000064MS		EQU	0FFFFF8h
T000072MS		EQU	0FFFFF7h
T000088MS		EQU	0FFFFF5h
T000104MS		EQU	0FFFFF3h
T000128MS		EQU	0FFFFF0h
T000152MS		EQU	0FFFFEDh
T000168MS		EQU	0FFFFEBh
T000200MS		EQU	0FFFFE7h
T000256MS		EQU	0FFFFE0h
T000304MS		EQU	0FFFFDAh
T000320MS		EQU	0FFFFD8h
T000352MS		EQU	0FFFFD4h
T000504MS		EQU	0FFFFC1h
T000552MS		EQU	0FFFFBBh
T000600MS		EQU	0FFFFB5h
T000624MS		EQU	0FFFFB2h
T000752MS		EQU	0FFFFA2h
T000800MS		EQU	0FFFF9Ch
T001000MS		EQU	0FFFF83h
T001128MS		EQU	0FFFF73h
T001256MS		EQU	0FFFF63h
T001384MS		EQU	0FFFF53h
T001504MS		EQU	0FFFF44h
T001512MS		EQU	0FFFF43h
T002000MS		EQU	0FFFF06h
T002504MS		EQU	0FFFEC7h
T003000MS		EQU	0FFFE89h
T004000MS		EQU	0FFFE0Ch
T005000MS		EQU	0FFFD8Fh
T010000MS		EQU	0FFFB1Eh
T020000MS		EQU	0FFF63Ch
T050000MS		EQU	0FFE796h


;
.ENDIF

.IF(C_GAPTIME .EQ. 5)
;*5.33MS
CNT_STOP		EQU	00000000h
;
T000032MS		EQU	0FFFFFAh
T000064MS		EQU	0FFFFF4H
T000096MS		EQU	0FFFFEEH
T000128MS		EQU	0FFFFE8H

T000056MS		EQU	0FFFFF6h

T000072MS		EQU	0FFFFF3h

T000104MS		EQU	0FFFFE7H
T000200MS		EQU	0FFFFDBH
T000256MS		EQU	0FFFFD0H
T000300MS		EQU	0FFFFC8H
T000504MS		EQU	0FFFFA2h
T000580MS		EQU	0FFFF93H
T000800MS		EQU	0FFFF6AH
T000850MS		EQU	0FFFF61H
T000950MS		EQU	0FFFF4EH
T001000MS		EQU	0FFFF45H

T000152MS	EQU	0FFFFE4H
T001500MS	EQU	0FFFEE7H
T002000MS	EQU	0FFFE89H
T003000MS	EQU	0FFFDCEH
T005000MS	EQU	0FFFC56H

;T002000MS	EQU	0FFFE89H
T004000MS	EQU	0FFFD12H

T000650MS	EQU	0FFFF86H
T000680MS	EQU	0FFFF81H
T000150MS EQU 0FFFFE4H


T006000MS	EQU	0FFFB9BH
T007000MS	EQU	0FFFADFH
T008000MS	EQU	0FFFA23H
T009000MS	EQU	0FFF968H

;-----------------------------
T010000MS	EQU	0FFF8ACH
T015000MS	EQU	0FFF502H
T020000MS	EQU	0FFF158H

T060000MS	EQU	0FFD407H
T120000MS	EQU	0FFA80EH
T300000MS	EQU	0FF2423H
T600000MS	EQU	0FE4846H
T900000MS	EQU	0FD6C69H
T180000MS	EQU	0FF7C15H
T210000MS	EQU	0FF6619H

;T001500MS	EQU	0FFFEE7H
;T000800MS	EQU	0FFFF6AH
T000700MS	EQU	0FFFF7DH
T000600MS	EQU 0FFFF8FH
T000400MS	EQU	0FFFFB5H
;T000300MS	EQU	0FFFFC8H
T030000MS	EQU	0FFEA04H


;
.ENDIF
.IF(C_GAPTIME .EQ. 10)
;*10.66MS
CNT_STOP		EQU	00000000h
;
T000032MS		EQU	0FFFFFDh
;
T000056MS		EQU	0FFFFFBh
;
T000104MS		EQU	0FFFFF6H
T000200MS		EQU	0FFFFEEH
T000256MS		EQU	0FFFFE8H

T000300MS		EQU	0FFFFE4H
T000400MS		EQU	0FFFFDAH

;
T000512MS		EQU	0FFFFD0H
T000600MS		EQU	0FFFFC8H
T000700MS		EQU	0FFFFBEH
T000752MS		EQU	0FFFFB9H

T000800MS		EQU	0FFFFB5H

T001000MS		EQU	0FFFFA2H
T001500MS		EQU	0FFFF73H
T002000MS		EQU	0FFFF45H

T005000MS		EQU	0FFFE2BH
;
;T000152MS	EQU	0FFFFE4H
;T003000MS	EQU	0FFFDCEH
;T005000MS	EQU	0FFFC56h
;
;T010000MS	EQU	0FFF8ACH
;
;T020000MS	EQU	0FFF158H
;
;T060000MS	EQU	0FFD407H
;T300000MS	EQU	0FF2423H
;T600000MS	EQU	0FE4846H
;T900000MS	EQU	0FD6C69H
;T180000MS	EQU	0FF7C15H

T000504MS		EQU	0FFFFD1h
	
;
.ENDIF

; * 85ms
T120S_85	EQU	0FFFA7DH
T001S_85	EQU	0FFFFF4H
T002S_85	EQU	0FFFFE8H
T010S_85	EQU	0FFFF8AH
T020S_85	EQU	0FFFF15H

.IF (C_CHIP.EQ.C_N588H)
	 ; IEF0
PORT_INT_BIT	EQU	01H
TIMER0_INT_BIT	EQU	02H
TIMER1_INT_BIT	EQU	04H
TIMERG0_INT_BIT	EQU	08H
FXF13_INT_BIT	EQU	10H
FXF10_INT_BIT	EQU	20H
;
FXF15_INT_BIT	EQU	80H

.ENDIF

; *21.3ms
T0001S_21	EQU	0FFD1H ;47
T0005S_21	EQU	0FF15H ;
T0020S_21	EQU	0FC55H ;
T0300S_21	EQU	0C833H ;

; *42.6ms
T0001S_42	EQU	0FFE8H ;24
T0003S_42	EQU	0FFB9H ;71
T0005S_42	EQU	0FF88H ;120
T0006S_42	EQU	0FF73H ;141
T0009S_42	EQU	0FF2DH;211
T0020S_42	EQU	0FE20H ;480
T1200S_42 EQU	091F7H;28169
T1800S_42	EQU	05898H;
T2400S_42 EQU	023EEH;56338

;==========================================
C_ORGAN_KEY_ST						EQU	00H
C_DRUM_KEY_ST						EQU	30H
C_DRUM_KEY_END					EQU	3FH+1
C_INS_KEY_ST						EQU	40H ; 从这个键开始只有一个键有效.

;--- 从这个键开始只有一个键有效.在功能上防止四角错键到功能键。鼓键多键有效.
;C_SINGLE_KEY_ST						EQU	C_INS_KEY_ST
;--- 从这个键开始只有一个键有效.在位置上(把琴键单独排在一个矩阵中)防止四角错键到功能键。鼓键只有一个键有效
C_SINGLE_KEY_ST						EQU	C_NOP


C_RHY_KEY_ST						EQU	50H
C_FUNC_KEY_ST					EQU	60H;





