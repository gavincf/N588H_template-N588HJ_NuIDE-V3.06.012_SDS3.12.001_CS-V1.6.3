;----------------------
; MACRO
;-----------------------------
MACRO_CLOSE_SPK MACRO
	.IF (C_CHIP.EQ.C_W567BS)
	STZ	S0EN
	.ENDIF
	.IF (C_CHIP.EQ.C_N567GHK)
;	STZ	SPEN
	.ENDIF
	.IF (C_CHIP.EQ.C_N588L)
;	STZ	SPEN
	.ENDIF
	.IF (C_CHIP.EQ.C_N588H)
;	STZ	SPEN
	.ENDIF
	.IF (C_CHIP.EQ.C_W588AS)
	STZ	S0EN
	.ENDIF
	.IF (C_CHIP.EQ.C_W588CD)
	STZ	SPEN
	.ENDIF
	ENDM
MACRO_SET_SPK MACRO
	.IF (C_CHIP.EQ.C_W567BS)
	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (C_CHIP.EQ.C_N567GHK)
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (C_CHIP.EQ.C_N588L)
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (C_CHIP.EQ.C_N588H)
;	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (C_CHIP.EQ.C_W588AS)
	SET_SPEAKER_OUTPUT_TYPE_TO DAC_5mA	;USER S OPTION (DAC_5mA/ DAC_3mA/ PWM)
	.ENDIF
	.IF (C_CHIP.EQ.C_W588CD)
	NOP
	.ENDIF
	ENDM

MACRO_CLR_WDT MACRO
	.IF (C_CHIP.EQ.C_W567BS)
	LDA #1
	STA !WDTC
	.ENDIF
	.IF (C_CHIP.EQ.C_N567GHK)
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_N588L)
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_N588H)
	LDA #CTL_CPU_WDT
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_W588AS)
	LDA #1
	STA !WDTC
	.ENDIF
	.IF (C_CHIP.EQ.C_W588CD)
	LDA #1
	STA !WDTC
	.ENDIF
	ENDM
MACRO_ENTER_STOP MACRO
	.IF (C_CHIP.EQ.C_W567BS)
	LDA	#1
	STA	STOP
	.ENDIF
	.IF (C_CHIP.EQ.C_N567GHK)
	LDA #CTL_CPU_STOP
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_N588L)
	LDA #CTL_CPU_STOP
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_N588H)
	LDA #CTL_CPU_STOP
	TSB !CTL_CPU
	.ENDIF
	.IF (C_CHIP.EQ.C_W588AS)
	LDA	#1
	STA	STOP
	.ENDIF
	.IF (C_CHIP.EQ.C_W588CD)
	LDA	#1
	STA	STOP
	.ENDIF
	ENDM
MACRO_INT_ENABLE MACRO VALUE
	.IF (C_CHIP.EQ.C_N588H)
	LDA	#.LOW.VALUE
	TSB	!IEF0
	.ENDIF
	ENDM
MACRO_INT_DISABLE MACRO VALUE
	.IF (C_CHIP.EQ.C_N588H)
	LDA	#.LOW.VALUE
	TRB	!IEF0
	.ENDIF
	ENDM
	
MR_SET_DLYCNT0 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT0
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT0+1
	LDA	#C_CNT0_BIT

	TRB	<USER_FLAG_B
	ENDM
	
MR_SET_DLYCNT0_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT0
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT0+1
	LDA	#C_CNT0_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	WB_DLYCNT0_IDX
	
	ENDM

MR_SET_DLYCNT1 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT1
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT1+1
	LDA	#C_CNT1_BIT

	TRB	<USER_FLAG_B
	ENDM

MR_SET_DLYCNT1_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT1
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT1+1
	LDA	#C_CNT1_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	WB_DLYCNT1_IDX
	ENDM

MR_SET_DLYCNT2 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT2
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT2+1
	LDA	#C_CNT2_BIT
	TRB	<USER_FLAG_B
	ENDM

MR_SET_DLYCNT2_IDX MACRO VALUE,IDX
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT2
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT2+1
	LDA	#C_CNT2_BIT
	TRB	<USER_FLAG_B
	LDA	#IDX
	STA	WB_DLYCNT2_IDX
	ENDM

MR_SET_DLYCNT3 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT3
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT3+1
	LDA	#C_CNT3_BIT

	TRB	<USER_FLAG_B
	ENDM
MR_SET_DLYCNT4 MACRO VALUE
	LDA	#.LOW.VALUE
	STA	WB_DLYCNT4
	LDA	#.HIGH.VALUE
	STA	WB_DLYCNT4+1
	LDA	#C_CNT4_BIT

	TRB	<USER_FLAG_B
	ENDM
MR_SET_FG0_FLAG MACRO
	LDA	#C_FG0_BIT
	TSB	<USER_FLAG_B
	ENDM
MR_SET_FG1_FLAG MACRO
	LDA	#C_FG1_BIT
	TSB	<USER_FLAG_B
	ENDM
MR_CLR_FG0_FLAG MACRO
	LDA	#C_FG0_BIT
	TRB	<USER_FLAG_B
	ENDM
MR_CLR_FG1_FLAG MACRO
	LDA	#C_FG1_BIT
	TRB	<USER_FLAG_B
	ENDM

MACRO_SET_KEYCH0 MACRO
	LDA	#C_KEYCH0_BIT
	TSB	USER_FLAG_A
	ENDM
MACRO_SET_KEYCH1 MACRO
	LDA	#C_KEYCH1_BIT
	TSB	USER_FLAG_A
	ENDM
MACRO_SET_KEYCH2 MACRO
	LDA	#C_KEYCH2_BIT
	TSB	USER_FLAG_A
	ENDM
MACRO_SET_KEYCH3 MACRO
	LDA	#C_KEYCH3_BIT
	TSB	USER_FLAG_A
	ENDM
MR_SET_GAPTIME_FLAG MACRO
	LDA	#C_BIT3
	TSB	<USER_INT_FLAG0
	ENDM
MR_CLR_GAPTIME_FLAG MACRO
	LDA	#C_BIT3
	TRB	<USER_INT_FLAG0
	ENDM
MR_TEST_GAPTIME_FLAG MACRO
	LDA	#C_BIT3
	BIT	<USER_INT_FLAG0
	ENDM
MR_SET_TMG1_GAP_FLAG MACRO
	LDA #C_BIT2
	TSB <USER_INT_FLAG0
	ENDM
MR_CLR_TMG1_GAP_FLAG MACRO
	LDA	#C_BIT2
	TRB	<USER_INT_FLAG0
	ENDM
MR_TEST_TMG1_GAP_FLAG MACRO
	LDA	#C_BIT2
	BIT	<USER_INT_FLAG0
	ENDM

MACRO_CHECK_CH1_ENABLE MACRO
	LDA	#C_CHK_SPCH1_BIT
	TSB	USER_FLAG10
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CHECK_CH2_ENABLE MACRO
	LDA	#C_CHK_SPCH2_BIT
	TSB	USER_FLAG10
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CHECK_MS_ENABLE MACRO
	LDA	#C_CHK_MS1_BIT
	TSB	USER_FLAG10
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CHECK_CH1_DISABLE MACRO
	LDA	#C_CHK_SPCH1_BIT
	TRB	USER_FLAG10
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CHECK_CH2_DISABLE MACRO
	LDA	#C_CHK_SPCH2_BIT
	TRB	USER_FLAG10
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CHECK_MS_DISABLE MACRO
	LDA	#C_CHK_MS1_BIT
	TRB	USER_FLAG10
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
	
MACRO_CLR_CNT0_FLAG MACRO
	LDA	#C_BIT0
	TRB	<USER_FLAG_B
	ENDM
MACRO_CLR_CNT1_FLAG MACRO
	LDA	#C_BIT1
	TRB	<USER_FLAG_B
	ENDM
MACRO_CLR_CNT2_FLAG MACRO
	LDA	#C_BIT2
	TRB	<USER_FLAG_B
	ENDM
MACRO_CLR_CNT3_FLAG MACRO
	LDA	#C_BIT3
	TRB	<USER_FLAG_B
	ENDM
MACRO_CLR_CNT4_FLAG MACRO
	LDA	#C_BIT4
	TRB	<USER_FLAG_B
	ENDM
	
MR_CLR_EQU_CNT_FLAG MACRO
	LDA	#C_EQU_CNT_BIT
	TRB	<USER_FLAG_B
	ENDM
	
MACRO_CLR_AUTOCNT_FLAG MACRO
	LDA	#C_AUTO_CNT_BIT
	TRB	<USER_FLAG_B
	ENDM

;
MACRO_CLR_CH1_FLAG MACRO
	LDA	#C_SPCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_CH2_FLAG MACRO
	LDA	#C_SPCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_MS_FLAG MACRO
	LDA	#C_MS1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_KEYCH0_FLAG MACRO
	LDA	#C_KEYCH0_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_KEYCH1_FLAG MACRO
	LDA	#C_KEYCH1_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_KEYCH2_FLAG MACRO
	LDA	#C_KEYCH2_BIT
	TRB	USER_FLAG_A
	ENDM
MACRO_CLR_KEYCH3_FLAG MACRO
	LDA	#C_KEYCH3_BIT
	TRB	USER_FLAG_A
	ENDM


;==================================
	
MR_SET_SUB_MODE_NO	MACRO VALUE
	LDA	<SYS_MODE_NO
	AND	#0F0H
	ORA	#VALUE
	STA	<SYS_MODE_NO
	ENDM
	
MR_SET_MODE_NO	MACRO VALUE
	LDA	#VALUE
	STA	<SYS_MODE_NO
	ENDM

MR_CMP_MODE_NO	MACRO VALUE
	LDA	<SYS_MODE_NO
	CMP	#VALUE
	ENDM

;========================================



;MR_RESET_IDLE MACRO
;	
;	MR_SET_DLYCNT0 T010000MS ; IDLE
;
;	ENDM


