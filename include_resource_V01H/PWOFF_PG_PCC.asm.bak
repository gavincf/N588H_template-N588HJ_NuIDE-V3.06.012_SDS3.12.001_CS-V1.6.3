


;=======================================
PWOFF_LOOP_PRE1:

;	MR_SET_MODE_NO C_MODE0_0

.IF ( C_LED_MATRIX_EN .EQ. 1 )
	JSR	BK0_MATRIX_LED_CTL_OFF
.ENDIF

	JMP	ENTER_STOP

	
PWOFF_LOOP_WAITSP:
	
;	MR_PLAY_GROUP_RANDOM C_IDX_SLEEP

PWOFF_LOOP2:
; MODE1: F4


PCC_PWOFF_LOOP2:
	


	MACRO_CHECK_CH1_ENABLE

PWOFF_LOOP:
	JSR	WAITKEY
PWOFF_LOOP_S10:
	LDA	USER_FLAG_A
	BIT	#C_KEYCH0_BIT
	BNE	PWOFF_LOOP_KEYCH0_J1
	BIT	#C_KEYCH1_BIT
	BNE	PWOFF_LOOP_KEYCH1_J1
	BIT	#C_KEYCH2_BIT
	BNE	PWOFF_LOOP_KEYCH2_J1
	BIT	#C_KEYCH3_BIT
	BNE	PWOFF_LOOP_KEYCH3_J1
	BIT	#C_SPCH1_BIT
	BNE	PWOFF_LOOP_CH1END_J1
	BIT	#C_SPCH2_BIT
	BNE	PWOFF_LOOP_CH2END_J1
	
	LDA	USER_FLAG_B
	BIT	#C_CNT0_BIT
	BNE	PWOFF_LOOP_CNT0
	BIT	#C_CNT1_BIT
	BNE	PWOFF_LOOP_CNT1
	BIT	#C_AUTO_CNT_BIT
	BNE	PWOFF_LOOP_AUTOCNT_J1
	
	JMP	PWOFF_LOOP
PWOFF_LOOP_KEYCH0_J1:
	JMP	PWOFF_LOOP_KEYCH0
PWOFF_LOOP_KEYCH1_J1:
	JMP	PWOFF_LOOP_KEYCH1
PWOFF_LOOP_KEYCH2_J1:
	JMP	PWOFF_LOOP_KEYCH2
PWOFF_LOOP_KEYCH3_J1:
	JMP	PWOFF_LOOP_KEYCH3
PWOFF_LOOP_AUTOCNT_J1:
	JMP PWOFF_LOOP_AUTOCNT
PWOFF_LOOP_CH1END_J1:
	JMP PWOFF_LOOP_CH1END
PWOFF_LOOP_CH2END_J1:
	JMP PWOFF_LOOP_CH2END
PWOFF_LOOP_CNT0:; IDLE TIMER
	MACRO_CLR_CNT0_FLAG
	

	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_CNT1:
	MACRO_CLR_CNT1_FLAG
;

	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_CNT2:
	MACRO_CLR_CNT2_FLAG
	
	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_CNT3:
	MACRO_CLR_CNT3_FLAG
	
	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_CH1END:
	MACRO_CLR_CH1_FLAG
;
.IF ( C_EQU_PWOFF_EN .EQ. 1 )	

	MR_DET_EQU_FG
	BNE	PWOFF_LOOP_CH1END_S100

	JMP	ENTER_STOP; ;SPEECH
	
PWOFF_LOOP_CH1END_S100:; EQU
	JSR	BK0_PLAY_EQU_NEXT
	BNE	PWOFF_LOOP_CH1END_NEXT ; NEXT
;EQU END
.ENDIF

	JMP	ENTER_STOP
PWOFF_LOOP_CH1END_NEXT:

	JMP	PWOFF_LOOP_S10
	
PWOFF_LOOP_CH2END:
	MACRO_CLR_CH2_FLAG
	
	JMP	PWOFF_LOOP_S10

PWOFF_LOOP_AUTOCNT:
	MACRO_CLR_AUTOCNT_FLAG
;

	JMP	PWOFF_LOOP_S10
	
PWOFF_LOOP_KEYCH1:
	MACRO_CLR_KEYCH1_FLAG
;MODE

	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_KEYCH2:
	MACRO_CLR_KEYCH2_FLAG
;MODE

	JMP	PWOFF_LOOP_S10
PWOFF_LOOP_KEYCH3:
	MACRO_CLR_KEYCH3_FLAG
	
	JMP	PWOFF_LOOP_S10

PWOFF_LOOP_KEYCH0:
	MACRO_CLR_KEYCH0_FLAG
; key channel 0

	JMP	PWOFF_LOOP_S10
	



;================================
ENTER_STOP:
	
.IF ( C_SPCH1_ENABLE	.EQ.	1 ) .OR. ( C_SPCH2_ENABLE	.EQ.	1 ).OR. ( C_SPCH3_ENABLE	.EQ.	1 ) 

	JSR STOP_ALL

.ENDIF
	
	MACRO_CLR_AUTOCNT_FLAG
;¹Ø±ÕCMP_A
	.IF ( C_CMPA_EN .EQ. 1 )
	JSR	BK0_CMPAB_OFF

	.ENDIF

	LDA	#C_PWOFF_BP0D
	STA	!BP0D
	LDA	#C_PWOFF_R_BP0
.IF ( C_R_BP0_USED .EQ. 1 )
	STA	R_BP0
.ENDIF
	STA	!BP0

;	MR_SET_PWOFF_FG
;check current mode
;MODE0
	LDA	#C_PWOFF0_BP1D
	STA	!BP1D
	LDA	#C_PWOFF0_R_BP1
	STA	R_BP1
	STA	!BP1
	
	.IFDEF	BP2
	LDA	#C_PWOFF_BP2D
	STA	!BP2D
	LDA	#C_PWOFF_R_BP2
.IF ( C_R_BP2_USED .EQ. 1 )
	STA	R_BP2
.ENDIF
	STA	!BP2
	.ENDIF

;if some IO change to input from output ;->;DELAY1MS
;	JSR	BK0_DELAY1MS
	JSR BK0_DELAY100US	

	JSR	BK0_STORE_BPX_WO_BOND_PWOFF
	
;================================================
PCC_ENTERN_STOP_PRE:




;=================================================
;	MACRO_CLOSE_SPK
;----------------  SETTING wakeup source --------------
	LDA	#C_BP1EN_PWOFF
	STA	BP1EN

.IF ( C_TMG0_EN .EQ. 1 )
	JSR	BK0_STOP_TMG0
.ENDIF
	MACRO_INT_DISABLE FXF15_INT_BIT
	
	MACRO_CLR_WDT
	MACRO_ENTER_STOP
	
	NOP
	NOP
	NOP
	
	MACRO_INT_ENABLE FXF15_INT_BIT
	
;	MACRO_SET_SPK
	
	LDA	#0E0H
WAKEUP_DELAY:
	INC	A
	BNE	WAKEUP_DELAY

	MR_SET_AUTOCNT1

	JMP	MAIN_WAKEUP



