

BK0_CHKMKEY_INIT:
	LDA	#C_NOP
	STA	<WB_MKEYCH_CODE

.IF ( C_MKEYCH_MAX .GT. 1 )
	STA	<WB_MKEYCH_CODE+1
.ENDIF
	
.IF ( C_MKEYCH_MAX .GT. 2 )
	STA	<WB_MKEYCH_CODE+2
.ENDIF
.IF ( C_MKEYCH_MAX .GT. 3 )
	STA	<WB_MKEYCH_CODE+3
.ENDIF

	LDA	#C_MKEYCH_MAX
.IF ( C_MKEYCH_MAX_REV .EQ. 1 )
	STA	R_KEYCH_MAX
.ENDIF
	
	RTS

;==================================================
BK0_DET_CHKMKEY: ; for auto sleep
	LDA	<WB_KEYDLY
	
.IF ( C_MKEYCH_MAX .GT. 2 )
	ORA	<WB_KEYDLY+1
.ENDIF
	BNE	BK0_DET_CHKMKEY_S10
;free
	LDA	#0
	RTS
BK0_DET_CHKMKEY_S10: ;BUSY
	LDA	#1
	RTS


;==========================
;CHK_KEYCH_RELEASE:
	CPX	<WB_MKEYCH_CODE
	BNE	CHK_KEYCH_RELEASE_S10

	LDY	#0
	JMP	BK0_CLR_KEYCH_Y

CHK_KEYCH_RELEASE_S10:
.IF ( C_MKEYCH_MAX .GT. 1 )
	CPX	<WB_MKEYCH_CODE+1
	BNE	CHK_KEYCH_RELEASE_S20
	
	LDY	#1
	JMP	BK0_CLR_KEYCH_Y

CHK_KEYCH_RELEASE_S20:
.ENDIF
.IF ( C_MKEYCH_MAX .GT. 2 )
	CPX	<WB_MKEYCH_CODE+2
	BNE	CHK_KEYCH_RELEASE_S30

	LDY	#2
	JMP	BK0_CLR_KEYCH_Y

CHK_KEYCH_RELEASE_S30:
.ENDIF
.IF ( C_MKEYCH_MAX .GT. 3 )
	CPX	<WB_MKEYCH_CODE+3
	BNE	CHK_KEYCH_RELEASE_S40

	LDY	#3
	JMP	BK0_CLR_KEYCH_Y

CHK_KEYCH_RELEASE_S40:
.ENDIF

	RTS

	

.IF (C_SCANKEY_4CH_LP .EQ. 1)
;==============================================
;	按键扫描四通道
;子程序： 2层
;==============================================
BK0_SCAN_KEY_4CH: ; 4/3 CH ;
	STZ	<WB_KEYCODE ; START FROM 0
	STZ	<ROW_SCAN_PT
	
BK0_SCAN_KEY_S10: ; SCAN ROW
;
	.IF ( C_LED_MATRIX_CONFIG .EQ. 1 )
	MR_DET_LED_MATRIX_EN
	BEQ	BK0_SCAN_KEY_S10_1
	.ENDIF
	
.IF ( C_CHK_KEY_SHARE_LED_EN .EQ. 1 )
	LDA	#1
	STA	<M_SHARE_RAM01
	JSR	BK0_MATRIX_LED_ROW
.ENDIF
BK0_SCAN_KEY_S10_1:
;
	LDA	<ROW_SCAN_PT
	ASL	A
	TAX
	LDA	SCAN_ROW_TBL0,X
	STA	<M_SHARE_RAM01

;for N567H
.IF ( C_CHIP	.EQ.	C_N567GHK )
	LDA	!SR_ROW_PORT0
	AND	#C_ROW_OP0_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	!SR_ROW_PORT0
.ENDIF
;for N588H
.IF ( C_CHIP	.EQ.	C_N588H )
;---------------------------------
;NMOS
;---------------------------------
	.IF ( C_SCAN_MATRIX_NMOS .EQ. 1)
	LDA	!SR_ROW_PORT0_MODE
	AND	#C_ROW_OP0_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	!SR_ROW_PORT0_MODE

	LDA	<R_ROW_PORT0
	AND	#C_ROW_OP0_MASK_INV
	STA	<R_ROW_PORT0
	STA	!SR_ROW_PORT0
;---------------------------------
	.ELSE
	LDA	<R_ROW_PORT0
	AND	#C_ROW_OP0_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	<R_ROW_PORT0
	STA	!SR_ROW_PORT0
	.ENDIF
.ENDIF

.IF (C_ROW1_ENABLE .EQ. 1)
	INX
	LDA	SCAN_ROW_TBL0,X
	STA	<M_SHARE_RAM01
;for N567H
	.IF ( CONST_CHIP	.EQ.	CONST_N567GHK )
	LDA	!SR_ROW_PORT1
	AND	#C_ROW_OP1_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	!SR_ROW_PORT1
	.ENDIF
;for N588H
	.IF ( CONST_CHIP	.EQ.	CONST_N588H )
;---------------------------------
;NMOS
;---------------------------------
;---------------------------------
		.IF ( C_SCAN_MATRIX_NMOS .EQ. 1)
	LDA	!SR_ROW_PORT1_MODE
	AND	#C_ROW_OP1_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	!SR_ROW_PORT1_MODE

	LDA	<R_ROW_PORT1
	AND	#C_ROW_OP1_MASK_INV
	STA	<R_ROW_PORT1
	STA	!SR_ROW_PORT1
		.ELSE
	LDA	<R_ROW_PORT1
	AND	#C_ROW_OP1_MASK_INV
	ORA	<M_SHARE_RAM01
	STA	<R_ROW_PORT1
	STA	!SR_ROW_PORT1
		.ENDIF
	.ENDIF
.ENDIF ;C_ROW1_ENABLE

BK0_SCAN_KEY_S09: ; SCAN ROW

.IF ( C_SCAN_MATRIX_NMOS .EQ. 1)
	JSR	BK0_DELAY50US
	JSR	BK0_DELAY50US
	JSR	BK0_DELAY50US
	JSR	BK0_DELAY50US
;10k ohm pcb resistor 
;	JSR	BK0_DELAY50US
;	JSR	BK0_DELAY50US
;	JSR	BK0_DELAY50US
;	JSR	BK0_DELAY50US
.ENDIF

BK0_SCAN_KEY_S09_1:
;CMOS OUTPUT
	JSR	BK0_DELAY50US
	JSR	BK0_DELAY50US
	MACRO_CLR_WDT

;read Port0
	LDA	!SR_MATRIX_IP0_PORT
	AND	#C_MATRIX_IP0_MASK
	STA	<MATRIX_IP_0

	LDA	<ROW_SCAN_PT
	BNE	BK0_SCAN_KEY_S09_2
; 1ST Row	
.IF ( C_CHKMKEY_GND_AS_OP .EQ. 1 )
	LDA	MATRIX_IP_0
	STA	MATRIX_IP_0_GND
.ENDIF

BK0_SCAN_KEY_S09_2:

	LDA	#C_MATRIX_IP0_BIT_ST
	STA	<BIT_SCAN
;
BK0_SCAN_KEY_S20: ; CHECK BIT
	LDX	<WB_KEYCODE
	LDA	KEY_TRANS_TBL0,X
	
	CMP	#XXH
	BEQ	BK0_SCAN_KEY_S100_J1;NOP
	TAX


	LDA	<ROW_SCAN_PT
	BEQ	BK0_SCAN_KEY_S21 ; GND LINE
;not 1st row

.IF ( C_CHKMKEY_GND_AS_OP .EQ. 1 )
	LDA	<BIT_SCAN
	BIT	<MATRIX_IP_0_GND
	BEQ	BK0_SCAN_KEY_S22
.ENDIF
	
BK0_SCAN_KEY_S21:
	LDA	<BIT_SCAN
	BIT	<MATRIX_IP_0
	BEQ	BK0_SCAN_KEY_LOW_S00_J1
; KEY RISE

BK0_SCAN_KEY_S22:
	CPX	<WB_MKEYCH_CODE
	BNE	BK0_SCAN_KEY_HIGH_S30
; Release WB_MKEYCH_CODE

.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#0; WB_MKEYCH_CODE
	JSR	BK0_NOTEOFF_CUR_KEY
.ENDIF

.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S20_1
	LDY	#0
	JSR	BK0_NUM_LED_OFF_W_Y; ------- sub level 4
.ENDIF

BK0_SCAN_KEY_HIGH_S20_1:
	LDY #0
	JSR	BK0_CLR_KEYCH_Y
	
	BRA	BK0_SCAN_KEY_S100_J1

BK0_SCAN_KEY_LOW_S00_J1:
	JMP BK0_SCAN_KEY_LOW_S00

BK0_SCAN_KEY_S100_J1:
	JMP	BK0_SCAN_KEY_S100

BK0_SCAN_KEY_HIGH_S30:
	
.IF ( C_MKEYCH_MAX .GT. 1 )
	CPX	<WB_MKEYCH_CODE+1
	BNE	BK0_SCAN_KEY_HIGH_S40
; Release WB_MKEYCH_CODE+1
;

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#1; WB_MKEYCH_CODE+1
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S312
	LDY	#1 ;---------------- T16B66D1
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF

BK0_SCAN_KEY_HIGH_S312:
	LDY	#1
	JSR	BK0_CLR_KEYCH_Y
	
	JMP	BK0_SCAN_KEY_S100
;

BK0_SCAN_KEY_HIGH_S40:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 2 )
	CPX	<WB_MKEYCH_CODE+2
	BNE	BK0_SCAN_KEY_HIGH_S50
; Release WB_MKEYCH_CODE+2

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#2; WB_MKEYCH_CODE+2
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S412
	LDY	#2
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF
BK0_SCAN_KEY_HIGH_S412:

	LDY	#2
	JSR	BK0_CLR_KEYCH_Y

	BRA	BK0_SCAN_KEY_S100_J1

BK0_SCAN_KEY_HIGH_S50:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 3 )
	CPX	<WB_MKEYCH_CODE+3
	BNE	BK0_SCAN_KEY_HIGH_S60
; Release WB_MKEYCH_CODE+3
;

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#3; WB_MKEYCH_CODE+3
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S512
	LDY	#3
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF
BK0_SCAN_KEY_HIGH_S512:

	LDY	#3
	JSR	BK0_CLR_KEYCH_Y

BK0_SCAN_KEY_HIGH_S60:
.ENDIF

	JMP	BK0_SCAN_KEY_S100

BK0_SCAN_KEY_S100_J2:
	JMP	BK0_SCAN_KEY_S100

BK0_SCAN_KEY_LOW_S00:
; KEY LOW
	CPX	<WB_MKEYCH_CODE
	BNE	BK0_SCAN_KEY_LOW_S10
		
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT4
	BNE	BK0_SCAN_KEY_S100_J1	;KEY HOLD
	INC	<WB_KEYDLY
	LDA	<WB_KEYDLY
	AND	#0FH
	CMP	#C_KEYCH1_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S100_J1
	LDA	#0FH
	TRB	<WB_KEYDLY
	
;GET KEY
	LDA	#00010001B
	TSB	<WB_KEY_FLAG
;
.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S002
	LDY	#0
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S002:
.ENDIF

	JMP	BK0_SCAN_KEY_S100
BK0_SCAN_KEY_LOW_S10:
	
.IF ( C_MKEYCH_MAX .GT. 1 )
	CPX	<WB_MKEYCH_CODE+1
	BNE	BK0_SCAN_KEY_LOW_S20
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT5
	BNE	BK0_SCAN_KEY_S100_J2	;KEY HOLD
	LDA	<WB_KEYDLY
	CLC
	ADC	#010H
	STA	<WB_KEYDLY
	AND	#0F0H
	CMP	#C_KEYCH2_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S100_J2
	LDA	#0F0H
	TRB	<WB_KEYDLY
;GET KEY
	LDA	#00100010B
	TSB	<WB_KEY_FLAG
;
;=================================
.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S102
	LDY	#1
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S102:
.ENDIF

	JMP BK0_SCAN_KEY_S100
	
BK0_SCAN_KEY_LOW_S20:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 2 )
	CPX	<WB_MKEYCH_CODE+2
	BNE	BK0_SCAN_KEY_LOW_S30
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT6
	BNE	BK0_SCAN_KEY_S100_J2	;KEY HOLD
	INC	<WB_KEYDLY+1
	LDA	<WB_KEYDLY+1
	AND	#0FH
	CMP	#C_KEYCH3_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S100_J2
	LDA	#0FH
	TRB	<WB_KEYDLY+1
;GET KEY
	LDA	#01000100B
	TSB	<WB_KEY_FLAG
;
;=================================
.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S20_2

	LDY	#2
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S20_2:
.ENDIF

	JMP BK0_SCAN_KEY_S100
	
BK0_SCAN_KEY_LOW_S30:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 3 )
;----------------------------如果最大按键通道可变，使用RAM
;	LDA	<R_KEYCH_MAX
;	CMP	#3
;	BEQ	BK0_SCAN_KEY_LOW_S40; ONLY 3 KEYS
;-----------------------------------------
	
	CPX	<WB_MKEYCH_CODE+3
	BNE	BK0_SCAN_KEY_LOW_S40
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT7
	BNE	BK0_SCAN_KEY_S100_J3	;KEY HOLD
	LDA	<WB_KEYDLY+1
	CLC
	ADC	#010H
	STA	<WB_KEYDLY+1
	AND	#0F0H
	CMP	#C_KEYCH4_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S100_J3
	LDA	#0F0H
	TRB	<WB_KEYDLY+1
;GET KEY
	LDA	#10001000B
	TSB	<WB_KEY_FLAG
;
;=================================
	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S30_2

	LDY	#3
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S30_2:
	.ENDIF

BK0_SCAN_KEY_S100_J3:
	JMP BK0_SCAN_KEY_S100
	
BK0_SCAN_KEY_LOW_S40:
.ENDIF
;
	JSR	BK0_KEY_IN_TAKEUP

BK0_SCAN_KEY_S100: ; NEXT BIT
;下一bit
	INC	<WB_KEYCODE
	
	LDA	<BIT_SCAN
	CMP	#C_MATRIX_IP0_BIT_END
	BEQ	BK0_SCAN_KEY_S110
	
.IF ( C_MATRIX_IP0_DIR .EQ. 0 )
	ASL	<BIT_SCAN
.ELSE
	LSR	<BIT_SCAN
.ENDIF
;
	JMP	BK0_SCAN_KEY_S20
	
BK0_SCAN_KEY_S110:
;===============================如果输入口有两组，这是第二组
.IF ( C_MATRIX_IP1_EN .EQ. 1 )
;read Port1
	LDA	!SR_MATRIX_IP1_PORT
	AND	#C_MATRIX_IP1_MASK
	STA	<MATRIX_IP_0
;
	LDA	#C_MATRIX_IP1_BIT_ST
	STA	<BIT_SCAN
;
BK0_SCAN_KEY_S120: ; CHECK BIT
	LDX	<WB_KEYCODE
	LDA	KEY_TRANS_TBL0,X
	
	CMP	#XXH
	BEQ	BK0_SCAN_KEY_S200_J1;NOP
	TAX

	LDA	<MATRIX_IP_0
	BIT	<BIT_SCAN
	BEQ	BK0_SCAN_KEY_LOW_S100_J1
; KEY RISE

	CPX	<WB_MKEYCH_CODE
	BNE	BK0_SCAN_KEY_HIGH_S130
; Release WB_MKEYCH_CODE
;

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#0; WB_MKEYCH_CODE
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S121
	LDY	#0
	JSR	BK0_NUM_LED_OFF_W_Y; ------- sub level 4
	.ENDIF

BK0_SCAN_KEY_HIGH_S121:
	LDY #0
	JSR	BK0_CLR_KEYCH_Y
	
	BRA	BK0_SCAN_KEY_S200_J1

BK0_SCAN_KEY_LOW_S100_J1:
	JMP BK0_SCAN_KEY_LOW_S100

BK0_SCAN_KEY_S200_J1:
	JMP	BK0_SCAN_KEY_S200

BK0_SCAN_KEY_HIGH_S130:
	
.IF ( C_MKEYCH_MAX .GT. 1 )
	CPX	<WB_MKEYCH_CODE+1
	BNE	BK0_SCAN_KEY_HIGH_S140
; Release WB_MKEYCH_CODE+1
;

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#1; WB_MKEYCH_CODE+1
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S131
	LDY	#1 ;---------------- T16B66D1
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF

BK0_SCAN_KEY_HIGH_S131:
	LDY	#1
	JSR	BK0_CLR_KEYCH_Y
	
	JMP	BK0_SCAN_KEY_S200
;

BK0_SCAN_KEY_HIGH_S140:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 2 )
	CPX	<WB_MKEYCH_CODE+2
	BNE	BK0_SCAN_KEY_HIGH_S150
; Release WB_MKEYCH_CODE+2
;

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#2; WB_MKEYCH_CODE+2
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S141
	LDY	#2
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF
BK0_SCAN_KEY_HIGH_S141:

	LDY	#2
	JSR	BK0_CLR_KEYCH_Y

	BRA	BK0_SCAN_KEY_S200_J1

BK0_SCAN_KEY_HIGH_S150:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 3 )
	CPX	<WB_MKEYCH_CODE+3
	BNE	BK0_SCAN_KEY_S160
; Release WB_MKEYCH_CODE+3

	.IF ( C_NOTEONOFF_EN .EQ. 1 )
	LDY	#3; WB_MKEYCH_CODE+3
	JSR	BK0_NOTEOFF_CUR_KEY
	.ENDIF

	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_HIGH_S151
	LDY	#3
	JSR	BK0_NUM_LED_OFF_W_Y
	.ENDIF
BK0_SCAN_KEY_HIGH_S151:

	LDY	#3
	JSR	BK0_CLR_KEYCH_Y

BK0_SCAN_KEY_S160:
.ENDIF

	JMP	BK0_SCAN_KEY_S200

BK0_SCAN_KEY_S200_J2:
	JMP	BK0_SCAN_KEY_S200

BK0_SCAN_KEY_LOW_S100: ;  LOW
; KEY LOW
	CPX	<WB_MKEYCH_CODE
	BNE	BK0_SCAN_KEY_LOW_S110
		
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT4
	BNE	BK0_SCAN_KEY_S200_J1	;KEY HOLD
	INC	<WB_KEYDLY
	LDA	<WB_KEYDLY
	AND	#0FH
	CMP	#C_KEYCH1_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S200_J1
	LDA	#0FH
	TRB	<WB_KEYDLY
;GET KEY
	LDA	#00010001B
	TSB	<WB_KEY_FLAG
;
	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S101
	LDY	#0
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S101:
	.ENDIF

	JMP	BK0_SCAN_KEY_S200
BK0_SCAN_KEY_LOW_S110:
.IF ( C_MKEYCH_MAX .GT. 1 )
	CPX	<WB_MKEYCH_CODE+1
	BNE	BK0_SCAN_KEY_LOW_S120
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT5
	BNE	BK0_SCAN_KEY_S200_J2	;KEY HOLD
	LDA	<WB_KEYDLY
	CLC
	ADC	#010H
	STA	<WB_KEYDLY
	AND	#0F0H
	CMP	#C_KEYCH2_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S200_J2
	LDA	#0F0H
	TRB	<WB_KEYDLY
;GET KEY
	LDA	#00100010B
	TSB	<WB_KEY_FLAG
;
;=================================
	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S111
	LDY	#1
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S111:
	.ENDIF

	JMP BK0_SCAN_KEY_S200
	
BK0_SCAN_KEY_LOW_S120:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 2 )
	CPX	<WB_MKEYCH_CODE+2
	BNE	BK0_SCAN_KEY_LOW_S130
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT6
	BNE	BK0_SCAN_KEY_S200_J2	;KEY HOLD
	INC	<WB_KEYDLY+1
	LDA	<WB_KEYDLY+1
	AND	#0FH
	CMP	#C_KEYCH3_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S200_J2
	LDA	#0FH
	TRB	<WB_KEYDLY+1
;GET KEY
	LDA	#01000100B
	TSB	<WB_KEY_FLAG
;
;=================================
	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S121

	LDY	#2
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S121:
	.ENDIF

	JMP BK0_SCAN_KEY_S200
	
BK0_SCAN_KEY_LOW_S130:
.ENDIF

.IF ( C_MKEYCH_MAX .GT. 3 )
;----------------------------如果最大按键通道可变，使用RAM
;	LDA	<R_KEYCH_MAX
;	CMP	#3
;	BEQ	BK0_SCAN_KEY_LOW_S140; ONLY 3 KEYS
;----------------------------
	
	CPX	<WB_MKEYCH_CODE+3
	BNE	BK0_SCAN_KEY_LOW_S140
	LDA	<WB_KEY_FLAG
	BIT	#C_BIT7
	BNE	BK0_SCAN_KEY_S200_J3	;KEY HOLD
	LDA	<WB_KEYDLY+1
	CLC
	ADC	#010H
	STA	<WB_KEYDLY+1
	AND	#0F0H
	CMP	#C_KEYCH4_DEBOUNCE; 5.33MS*2
	BNE	BK0_SCAN_KEY_S200_J3
	LDA	#0F0H
	TRB	<WB_KEYDLY+1
;GET KEY
	LDA	#10001000B
	TSB	<WB_KEY_FLAG
;
;=================================
	.IF ( C_WLED_EXIT .EQ. 1)
	MR_DET_WLED_CTRL
	CMP #C_WLED_KEY
	BNE	BK0_SCAN_KEY_LOW_S131

	LDY	#3
	JSR	BK0_NUM_LED_ON_KEYCH_Y
BK0_SCAN_KEY_LOW_S131:
	.ENDIF

BK0_SCAN_KEY_S200_J3:
	JMP BK0_SCAN_KEY_S200
	
BK0_SCAN_KEY_LOW_S140:
.ENDIF
;
	JSR	BK0_KEY_IN_TAKEUP

BK0_SCAN_KEY_S200:
;下一bit
	INC	<WB_KEYCODE
	
	LDA	<BIT_SCAN
	CMP	#C_MATRIX_IP1_BIT_END
	BEQ	BK0_SCAN_KEY_S1000
;
.IF ( C_MATRIX_IP1_DIR .EQ. 0 )
	ASL	<BIT_SCAN
.ELSE
	LSR	<BIT_SCAN
.ENDIF

	JMP	BK0_SCAN_KEY_S120
;======================================	

BK0_SCAN_KEY_S1000: ; 下一行
.ENDIF ; C_MATRIX_IP1_EN

	INC	<ROW_SCAN_PT
	
	LDA	<ROW_SCAN_PT
	CMP	#C_KEY_MATRIX_ROW_CNT0
	BCS	BK0_SCAN_KEY_END
	JMP	BK0_SCAN_KEY_S10

BK0_SCAN_KEY_END:
	
	.IF ( C_LED_MATRIX_CONFIG .EQ. 1 ); 
	MR_DET_LED_MATRIX_EN
	BEQ	BK0_SCAN_KEY_END1
	.ENDIF	
.IF ( C_CHK_KEY_SHARE_LED_EN .EQ. 1 )
	JMP	BK0_MATRIX_LED_RESTORE
.ENDIF
	
BK0_SCAN_KEY_END1:
	RTS

.ENDIF ;// (C_SCANKEY_4CH_LP .EQ. 1)


;=========================
;matrix 新按键进入KEY 4CH 判断和处理
; IN: X: keycode
;=========================
BK0_KEY_IN_TAKEUP:
	PHY ; 1
	PHX
	
	CPX #C_SINGLE_KEY_ST; 
	BCC	BK0_KEY_IN_TAKEUP_S21 ;ORGAN
	
;如果有其中一个键是单键，那这么个无效，不能进入，
;max function key = 1
	LDY	#0
BK0_KEY_IN_TAKEUP_S10:

	LDA	WB_MKEYCH_CODE,Y
	CMP #C_SINGLE_KEY_ST
	BCC	BK0_KEY_IN_TAKEUP_S20
	CMP #C_NOP
	BCS	BK0_KEY_IN_TAKEUP_S20
;func key (1) take; presented
	
	JMP	BK0_KEY_IN_TAKEUP_QUIT
BK0_KEY_IN_TAKEUP_S20:
	INY
.IF ( C_MKEYCH_MAX_REV .EQ. 1 )
	CPY	<R_KEYCH_MAX
.ELSE
	CPY	#C_MKEYCH_MAX
.ENDIF
	BCC	BK0_KEY_IN_TAKEUP_S10
;
	
BK0_KEY_IN_TAKEUP_S21:
	LDY	#0
	
BK0_KEY_IN_TAKEUP_S22:
	LDA	WB_MKEYCH_CODE,Y
	CMP	#C_NOP
	BNE	BK0_KEY_IN_TAKEUP_S23
;take up
	STX <WB_MKEYCH_CODE,Y ; KEY CODE
	TYA
	ASL	A
	ASL	A
	TAX
	LDA	T_KEYCH_FLAG_TBL,X
	TRB	<WB_KEY_FLAG
	INX
	LDA	T_KEYCH_FLAG_TBL,X
	TAY
	INX
	LDA	T_KEYCH_FLAG_TBL,X
	AND	WB_KEYDLY,Y
	STA	WB_KEYDLY,Y
	BRA	BK0_KEY_IN_TAKEUP_QUIT

BK0_KEY_IN_TAKEUP_S23:
	INY
.IF ( C_MKEYCH_MAX_REV .EQ. 1 )
	CPY	<R_KEYCH_MAX
.ELSE
	CPY	#C_MKEYCH_MAX
.ENDIF
	BCC	BK0_KEY_IN_TAKEUP_S22
;over
;不能抢占按键通道
BK0_KEY_IN_TAKEUP_QUIT:
	
	PLX
	PLY ;1
	
	RTS
;


BK0_CLR_KEYCH_Y:
	LDA	#C_NOP
	STA	WB_MKEYCH_CODE,Y
	
;clr FLAG_A
	LDA	T_KEYCH_FLAG_A_TBL,Y
	TRB	USER_FLAG_A
	
	TYA
	ASL	A
	ASL	A
	TAY
	LDA	T_KEYCH_FLAG_TBL,Y
	TRB	<WB_KEY_FLAG	; CLR KEY HOLD FLAG,AND NEW KEY FLAG
;
	INY
	LDA	T_KEYCH_FLAG_TBL,Y
	TAX
	INY
	LDA	T_KEYCH_FLAG_TBL,Y
	AND	WB_KEYDLY,X
	STA	WB_KEYDLY,X ; clear key dlycnt
	
	
	RTS

T_KEYCH_FLAG_A_TBL:
	DB	C_KEYCH0_BIT
	DB	C_KEYCH1_BIT
	DB	C_KEYCH2_BIT
	DB	C_KEYCH3_BIT	


T_KEYCH_FLAG_TBL:
;-- WB_KEY_FLAG,X,WB_KEYDLY, 0
	DB	00010001B,0,F0H,0
	DB	00100010B,0,0FH,0
	DB	01000100B,1,F0H,0
	DB	10001000B,1,0FH,0












